#!/bin/bash
set -ex

ws=/var/lib/rancher/k3s
clus_name="tk3s"
user="jedrw"
clus_url="https://tk3s.lupinelab.co.uk:6443"
ca_path=$ws/server/tls

ctx=gen && mkdir -p $ws/$ctx/$user/{kube,keys}/ && cd $ws/$ctx/
#############
ca1=client-ca
generate=$user"/keys/"$user
echo -e "\033[32m#>>GEN-KEY\033[0m"
# Un-comment these lines to create a new key and csr
if [[ ! -f $generate.key ]]; then 
    openssl genrsa -out $generate.key 2048
    openssl req -new -key $generate.key -out $generate.csr -subj "/CN=${user}"
    openssl x509 -req -days 36500 -in $generate.csr -CA $ca_path/$ca1.crt -CAkey $ca_path/$ca1.key -out $generate.crt
fi

#-----------
ca2=server-ca
embed=true
kubectx=tk3s
config="$user/kube/config"
echo -e "\033[32m#>>KUBE-CONFIG\033[0m"
kubectl --kubeconfig=$config config set-cluster $clus_name --embed-certs=$embed --server=$clus_url --certificate-authority=$ca_path/$ca2.crt
kubectl --kubeconfig=$config config set-credentials $user --embed-certs=$embed --client-certificate=$generate.crt  --client-key=$generate.key
kubectl --kubeconfig=$config config set-context $kubectx --cluster=$clus_name --user=$user
kubectl --kubeconfig=$config config set current-context $kubectx